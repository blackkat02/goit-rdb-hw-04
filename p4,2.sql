USE hw_3db;

SELECT
    COUNT(*) AS TotalRowsCombined
FROM
    orders o
LEFT JOIN
    customers c ON o.customer_id = c.id
LEFT JOIN
    employees e ON o.employee_id = e.employee_id
LEFT JOIN
    shippers s ON o.shipper_id = s.id 
LEFT JOIN
    order_details od ON o.id = od.order_id
LEFT JOIN
    products p ON od.product_id = p.id
LEFT JOIN
    categories cat ON p.category_id = cat.id
LEFT JOIN
    suppliers sup ON p.supplier_id = sup.id;
    
/*
INNER JOIN: Цей оператор повертає лише ті рядки, які мають спільні значення в обох таблицях, що приєднуються. 
Якщо для рядка з однієї таблиці немає відповідника в іншій за вказаною умовою ON, ця строка не буде включена 
до кінцевого результату. Це "перетин" даних.

LEFT JOIN(або LEFT OUTER JOIN) : Цей оператор повертає всі рядки з "лівої" таблиці (таблиця, вказана перед LEFT JOIN). 
Для кожного рядка з лівої таблиці він намагається знайти співпадаючий рядок у 
"правій" таблиці (таблиця, вказана після LEFT JOIN) за умовою ON.

Якщо відповідник у правій таблиці знайдено, стовпці з обох таблиць комбінуються.

Якщо відповідника у правій таблиці не знайдено , стовпці з лівої таблиці все одно включаються до результату, а для стовпців 
із правої таблиці повертаються значення NULL.

Те, що кількість рядків ( COUNT(*)) не змінилася після заміни INNER JOINна LEFT JOINвашому запиті, вказує на наступне:

Висока цілісність даних та відсутність "сирітських" записів:

База даних, ймовірно, має дуже хорошу референційну цілісність (referential integrity) .

Наприклад, якщо у є запис у таблиці orders(ліва таблиця), який посилається на customers(права таблиця) через customer_id, 
то це означає, що кожен запис ordersмає існуючого відповідного клієнта у таблиціcustomers .

Те саме стосується всіх інших об'єднань: кожен orderмає employeeта shipper; кожен order_detailмає product; 
кожен productмає categoryта supplier.

Оскільки LEFT JOINвключає рядки з лівої таблиці навіть якщо немає відповідника праворуч , 
але у вашому випадку завжди є відповідник праворуч , то LEFT JOINповертає той самий набір рядків, що і INNER JOIN. 
Жодна строчка з лівої таблиці не потребує розширення NULL-ами для правої сторони, оскільки відповідник завжди існує.
*/